{"version":3,"sources":["javascripts/node_modules/browser-pack/_prelude.js","javascripts/javascripts/app.js","javascripts/node_modules/scrollspy-js/src/js/modules/scrollspy.js","javascripts/node_modules/scrollspy-js/src/js/scrollspy.js"],"names":[],"mappingspnIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../../js/app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// Avoid `console` errors in browsers that lack a console.\n(function() {\n\tvar method;\n\tvar noop = function () {};\n\tvar methods = [\n\t\t'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',\n\t\t'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',\n\t\t'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',\n\t\t'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'\n\t];\n\tvar length = methods.length;\n\tvar console = (window.console = window.console || {});\n\n\twhile (length--) {\n\t\tmethod = methods[length];\n\n\t\t// Only stub undefined methods.\n\t\tif (!console[method]) {\n\t\t\tconsole[method] = noop;\n\t\t}\n\t}\n}());\n\n// window.$ = window.jQuery = require('jquery');\n\n// var bootstrap = require('bootstrap'); //optionally require all bootstrap js for testing\n\n// require('bootstrap/js/src/collapse');\n// require('bootstrap/js/src/scrollspy');\n\nvar scrollspy = require('scrollspy-js');\n\n\n\n\n\n//\n// navigation\n//\n\n// toggle mobile nav\n$('.navbar-toggler').click(function() {\n\tif ($('.navbar-nav').css('display') === 'none') {\n\t\t$('.navbar-nav').css('display','flex');\n\t\t$('.page-nav').css('top','91px');\n\t\tconsole.log('add style')\n\t} else {\n\t\t$('.navbar-nav').css('display','none');\n\t\t$('.page-nav').css('top','55px');\n\t}\n})\n\n\n// add active class to current nav link\n$('.top-nav .navbar-nav a').filter(function(){\n\treturn this.href == location.href.replace(/#.*/, \"\");\n}).addClass('active').removeAttr('href');\n\n\n\n\n//\n// form input label animation\n//\n\n// form label animation on input\n$(function () {\n\tvar showClass = 'show';\n\n\t$('#formContact .form-control').on('checkval', function () {\n\t\tvar label = $(this).prev('label');\n\t\t\n\t\tif(this.value !== '') {\n  \t\t\tlabel.addClass(showClass);\n\t\t} else {\n  \t\t\tlabel.removeClass(showClass);\n\t\t}\n\t}).on('keyup', function () {\n\t\t$(this).trigger('checkval');\n\t}); \n});\n\n\n// form input on :focus toggle .focused class on prev() <label> element\n$('#formContact').delegate('*', 'focus blur', function() {\n\tvar elem = $(this);\n\n\tsetTimeout(function() {\n\t\telem.prev().toggleClass('focused', elem.is(':focus'));\n\t}, 0);\n});\n\n\n// scrollspy-js\nvar spy = new ScrollSpy('.page-nav', {\n\tnav: '.page-nav > a',\n\tclassName: 'active',\n\tcallback: function () {\n\n\t}\n});","function ScrollSpy (wrapper, opt) {\n\n  this.doc = document;\n  this.wrapper = (typeof wrapper === 'string') ? this.doc.querySelector(wrapper) : wrapper;\n  this.nav = this.wrapper.querySelectorAll(opt.nav);\n\n  this.contents = [];\n  this.win = window;\n\n  this.winH = this.win.innerHeight;\n\n  this.className = opt.className;\n\n  this.callback = opt.callback;\n\n  this.init();\n}\n\nScrollSpy.prototype.init = function () {\n  this.contents = this.getContents();\n  this.attachEvent();\n};\n\nScrollSpy.prototype.getContents = function () {\n  var targetList = [];\n\n  for (var i = 0, max = this.nav.length; i < max; i++) {\n    var href = this.nav[i].href;\n\n    targetList.push(this.doc.getElementById(href.split('#')[1]));\n  }\n\n  return targetList;\n};\n\nScrollSpy.prototype.attachEvent = function () {\n  this.win.addEventListener('load', (function () {\n    this.spy(this.callback);\n  }).bind(this));\n\n\n  var scrollingTimer;\n\n  this.win.addEventListener('scroll', (function () {\n    if (scrollingTimer) {\n      clearTimeout(scrollingTimer);\n    }\n\n    var _this = this;\n\n    scrollingTimer = setTimeout(function () {\n      _this.spy(_this.callback);\n    }, 10);\n  }).bind(this));\n\n\n  var resizingTimer;\n\n  this.win.addEventListener('resize', (function () {\n    if (resizingTimer) {\n      clearTimeout(resizingTimer);\n    }\n\n    var _this = this;\n\n    resizingTimer = setTimeout(function () {\n      _this.spy(_this.callback);\n    }, 10);\n  }).bind(this));\n};\n\nScrollSpy.prototype.spy = function (cb) {\n  var elems = this.getElemsViewState();\n\n  this.markNav(elems);\n\n  if (typeof cb === 'function') {\n    cb(elems);\n  }\n};\n\nScrollSpy.prototype.getElemsViewState = function () {\n  var elemsInView = [],\n    elemsOutView = [],\n    viewStatusList = [];\n\n  for (var i = 0, max = this.contents.length; i < max; i++) {\n    var currentContent = this.contents[i],\n      isInView = this.isInView(currentContent);\n\n    if (isInView) {\n      elemsInView.push(currentContent);\n    } else {\n      elemsOutView.push(currentContent);\n    }\n    viewStatusList.push(isInView);\n  }\n\n  return {\n    inView: elemsInView,\n    outView: elemsOutView,\n    viewStatusList: viewStatusList\n  };\n};\n\nScrollSpy.prototype.isInView = function (el) {\n  var winH = this.winH,\n    scrollTop = this.doc.documentElement.scrollTop || this.doc.body.scrollTop,\n    scrollBottom = scrollTop + winH,\n    elTop = el.offsetTop,\n    elBottom = elTop + el.offsetHeight;\n\n  return (elTop < scrollBottom) && (elBottom > scrollTop);\n};\n\nScrollSpy.prototype.markNav = function (elems) {\n  var navItems = this.nav,\n    isAlreadyMarked = false;\n\n  for (var i = 0, max = navItems.length; i < max; i++) {\n    if (elems.viewStatusList[i] && !isAlreadyMarked) {\n      isAlreadyMarked = true;\n      navItems[i].classList.add(this.className);\n    } else {\n      navItems[i].classList.remove(this.className);\n    }\n  }\n};\n\n\nmodule.exports = ScrollSpy;\n","/**\n * ScrollSpy\n *\n */\n\nvar ScrollSpy = require('./modules/scrollspy');\n\nglobal.ScrollSpy = module.exports = ScrollSpy;\n"]}